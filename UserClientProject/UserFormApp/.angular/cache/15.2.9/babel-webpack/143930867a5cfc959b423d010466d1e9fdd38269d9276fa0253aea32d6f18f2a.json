{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http'; // Http istekleri icin import edildi.\nimport { User } from '../models/user-model'; //kullanılacak olan user model'i.\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nconst headers = new HttpHeaders({\n  'Content-Type': 'application/json' // veri tipinin json oldugu deklare edildi headerda.\n});\n\nexport class UserFormComponent {\n  constructor(http) {\n    this.http = http;\n    this.user = new User();\n    this.apiUrl = 'https://localhost:7133/api/Test/SaveUser'; //7133. portta ayağa kalkmış servise istek atılacak.(Test controller SaveUser metoduna)\n  }\n  //button submit edildiginde.\n  saveUser() {\n    //console.log(this.user);\n    this.http.post(this.apiUrl, this.user, {\n      headers: headers\n    }).subscribe(response => {\n      //eger post istegi basarılıysa...\n      this.showNotification(\"success\", \"Başarıyla kaydedildi\"); // Bilgilendirme mesajı cagır.(basarılı)\n      //console.log(\"Başarıyla kaydedildi...\");\n    }, error => {\n      this.showNotification(\"danger\", \"Kayıt başarısız\"); // Bilgilendirme mesajı cagır.(basarısız)\n      //console.log(\"Başarısızz..\");\n    });\n  }\n  //mesaja ve type'a göre olusturulan elementi alerts container elementinin childi'i seklinde olustur...\n  showNotification(type, message) {\n    const alertElement = document.createElement(\"div\");\n    alertElement.classList.add(\"alert\", `alert-${type}`, \"mt-3\");\n    alertElement.textContent = message;\n    const alertsContainer = document.getElementById(\"alerts-container\");\n    alertsContainer.appendChild(alertElement);\n    setTimeout(() => {\n      alertElement.remove();\n    }, 3000); // 3 saniye sonra uyarıyı kaldır\n  }\n}\n_class = UserFormComponent;\n_class.ɵfac = function UserFormComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-user-form\"]],\n  decls: 35,\n  vars: 6,\n  consts: [[1, \"container\", \"mt-5\"], [\"ngNativeValidate\", \"\", 3, \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"firstName\", 1, \"form-label\"], [\"required\", \"\", \"type\", \"text\", \"id\", \"firstName\", \"name\", \"firstName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"lastName\", 1, \"form-label\"], [\"required\", \"\", \"type\", \"text\", \"id\", \"lastName\", \"name\", \"lastName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"birthdate\", 1, \"form-label\"], [\"required\", \"\", \"type\", \"date\", \"id\", \"birthdate\", \"name\", \"birthdate\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"city\", 1, \"form-label\"], [\"required\", \"\", \"type\", \"text\", \"id\", \"city\", \"name\", \"city\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\", 1, \"form-label\"], [\"required\", \"\", \"type\", \"email\", \"id\", \"email\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"gender\", 1, \"form-label\"], [\"id\", \"gender\", \"name\", \"gender\", \"required\", \"\", 1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"erkek\"], [\"value\", \"kad\\u0131n\"], [\"value\", \"other\"], [1, \"mb-3\", \"text-center\"], [\"type\", \"submit\", 1, \"btn\", 2, \"color\", \"white\", \"background-color\", \"rgb(233,30,99)\"]],\n  template: function UserFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function UserFormComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.saveUser();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n      i0.ɵɵtext(4, \"Ad\\u0131n\\u0131z:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function UserFormComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.user.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Soyad\\u0131n\\u0131z:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function UserFormComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.user.lastName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 2)(11, \"label\", 7);\n      i0.ɵɵtext(12, \"Do\\u011Fum Tarihiniz:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function UserFormComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.user.birthDate = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 2)(15, \"label\", 9);\n      i0.ɵɵtext(16, \"\\u015Eehir:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function UserFormComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.user.city = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 2)(19, \"label\", 11);\n      i0.ɵɵtext(20, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function UserFormComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.user.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 2)(23, \"label\", 13);\n      i0.ɵɵtext(24, \"Cinsiyet:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"select\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function UserFormComponent_Template_select_ngModelChange_25_listener($event) {\n        return ctx.user.gender = $event;\n      });\n      i0.ɵɵelementStart(26, \"option\", 15);\n      i0.ɵɵtext(27, \"Erkek\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"option\", 16);\n      i0.ɵɵtext(29, \"Kad\\u0131n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"option\", 17);\n      i0.ɵɵtext(31, \"Belirtmek \\u0130stemiyorum\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(32, \"div\", 18)(33, \"button\", 19);\n      i0.ɵɵtext(34, \"Kaydet\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.lastName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.birthDate);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.city);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.gender);\n    }\n  },\n  dependencies: [i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["HttpHeaders","User","headers","UserFormComponent","constructor","http","saveUser","post","apiUrl","user","subscribe","response","showNotification","error","type","message","alertElement","document","createElement","classList","add","textContent","alertsContainer","getElementById","appendChild","setTimeout","remove","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\yakut\\OneDrive\\Masaüstü\\ArgusTech Task\\UserClientProject\\UserFormApp\\src\\app\\user-form\\user-form.component.ts","C:\\Users\\yakut\\OneDrive\\Masaüstü\\ArgusTech Task\\UserClientProject\\UserFormApp\\src\\app\\user-form\\user-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'; // Http istekleri icin import edildi.\nimport { User } from '../models/user-model'; //kullanılacak olan user model'i.\n\n\nconst headers = new HttpHeaders({\n  'Content-Type': 'application/json' // veri tipinin json oldugu deklare edildi headerda.\n});\n\n@Component({\n  selector: 'app-user-form', // html tag'deki ismi..\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css']\n})\nexport class UserFormComponent {\n  user: User = new User();\n  apiUrl = 'https://localhost:7133/api/Test/SaveUser' //7133. portta ayağa kalkmış servise istek atılacak.(Test controller SaveUser metoduna)\n\n  constructor(private http: HttpClient) { } \n\n  //button submit edildiginde.\n  saveUser(){\n\n    //console.log(this.user);\n    this.http.post(this.apiUrl, this.user, { headers: headers }).subscribe(\n      (response) => {\n        //eger post istegi basarılıysa...\n\n        this.showNotification(\"success\", \"Başarıyla kaydedildi\"); // Bilgilendirme mesajı cagır.(basarılı)\n        //console.log(\"Başarıyla kaydedildi...\");\n      },\n      (error) => {\n\n        this.showNotification(\"danger\", \"Kayıt başarısız\"); // Bilgilendirme mesajı cagır.(basarısız)\n        //console.log(\"Başarısızz..\");\n      }\n    );\n\n  }\n\n\n  //mesaja ve type'a göre olusturulan elementi alerts container elementinin childi'i seklinde olustur...\n  showNotification(type:string, message:string) {\n    const alertElement = document.createElement(\"div\");\n    alertElement.classList.add(\"alert\", `alert-${type}`, \"mt-3\");\n    alertElement.textContent = message;\n  \n    const alertsContainer = document.getElementById(\"alerts-container\");\n    alertsContainer!.appendChild(alertElement);\n    \n    setTimeout(() => {\n      alertElement.remove();\n    }, 3000); // 3 saniye sonra uyarıyı kaldır\n  }\n\n}","<!-- ngModel ile arkadaki user'ın field'ları doldurulur. ngSubmit ile form submit edilince saveUser metodu tetiklenir. -->\n<!-- form'a verilen ngNativeValidate HTML'in kendi validasyonlarını kullanmamızı sağlar.(required'lar etkin olur.) -->\n<div class=\"container mt-5\">\n  <form ngNativeValidate (ngSubmit)=\"saveUser()\">\n    <div class=\"mb-3\">\n      <label for=\"firstName\" class=\"form-label\">Adınız:</label>\n      <input required type=\"text\" class=\"form-control\" id=\"firstName\" [(ngModel)]=\"user.name\" name=\"firstName\">\n    </div>\n\n    <div class=\"mb-3\">\n      <label for=\"lastName\" class=\"form-label\">Soyadınız:</label>\n      <input required type=\"text\" class=\"form-control\" id=\"lastName\" [(ngModel)]=\"user.lastName\" name=\"lastName\">\n    </div>\n\n    <div class=\"mb-3\">\n      <label for=\"birthdate\" class=\"form-label\">Doğum Tarihiniz:</label>\n      <input required type=\"date\" class=\"form-control\" id=\"birthdate\" [(ngModel)]=\"user.birthDate\" name=\"birthdate\">\n    </div>\n\n    <div class=\"mb-3\">\n      <label for=\"city\" class=\"form-label\">Şehir:</label>\n      <input required type=\"text\" class=\"form-control\" id=\"city\" [(ngModel)]=\"user.city\" name=\"city\">\n    </div>\n\n    <div class=\"mb-3\">\n      <label for=\"email\" class=\"form-label\">Email:</label>\n      <input required type=\"email\" class=\"form-control\" id=\"email\" [(ngModel)]=\"user.email\" name=\"email\">\n    </div>\n\n    <div class=\"mb-3\">\n      <label for=\"gender\" class=\"form-label\">Cinsiyet:</label>\n      <select class=\"form-select\" id=\"gender\" [(ngModel)]=\"user.gender\" name=\"gender\" required>\n        <option value=\"erkek\">Erkek</option>\n        <option value=\"kadın\">Kadın</option>\n        <option value=\"other\">Belirtmek İstemiyorum</option>\n      </select>\n    </div>\n\n    <div class=\"mb-3 text-center\">\n      <button style=\"color: white; background-color: rgb(233,30,99);\" type=\"submit\" class=\"btn\">Kaydet</button>\n\n    </div>\n  </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}